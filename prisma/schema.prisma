generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "mongodb"
  url      = env("DATABASE_URL")
}

model Center_Member {
  id             String   @id @default(cuid()) @map("_id")
  title          String
  firstName      String
  lastName       String
  address        String
  postalCode     String
  phone          String
  email          String   @unique
  gender         String
  birthDate      String
  baptism        Boolean
  hashedPassword String
  centerId       String
  center         Center   @relation(fields: [centerId], references: [id])
  createdAt      DateTime @default(now())
  updatedAt      DateTime @updatedAt
}

model Spiritual_leader {
  id             String   @id @default(cuid()) @map("_id")
  firstName      String
  lastName       String
  phone          String
  email          String   @unique
  role           String?
  gender         String
  hashedPassword String
  centerId       String
  center         Center   @relation(fields: [centerId], references: [id])
  createdAt      DateTime @default(now())
  updatedAt      DateTime @updatedAt
}

model Convert {
  id             String   @id @default(cuid()) @map("_id")
  firstName      String
  lastName       String
  phone          String
  email          String   @unique
  gender         String
  status         String?
  followUp       String?
  actions        String?
  hashedPassword String
  centerId       String
  center         Center   @relation(fields: [centerId], references: [id])
  createdAt      DateTime @default(now())
  updatedAt      DateTime @updatedAt
}

model Admin {
  id             String   @id @default(cuid()) @map("_id")
  email          String   @unique
  hashedPassword String
  centerId       String
  center         Center   @relation(fields: [centerId], references: [id])
  createdAt      DateTime @default(now())
  updatedAt      DateTime @updatedAt
}

model Secretary {
  id             String   @id @default(cuid()) @map("_id")
  firstName      String
  lastName       String
  email          String   @unique
  hashedPassword String
  centerId       String
  center         Center   @relation(fields: [centerId], references: [id])
  createdAt      DateTime @default(now())
  updatedAt      DateTime @updatedAt
}

model Center {
  id           String             @id @default(cuid()) @map("_id")
  name         String
  location     String?
  elderName    String?
  centerLeader String?
  centerSize   String?
  contact      String
  createdAt    DateTime           @default(now())
  updatedAt    DateTime           @updatedAt
  members      Center_Member[]
  leader       Spiritual_leader[]
  secretary    Secretary[]
  converts     Convert[]
  admins       Admin[]
}

model Event {
  id          String   @id @default(cuid()) @map("_id")
  name        String
  date        DateTime
  time        String
  location    String
  description String
  sizeLimit   Int
  createdAt   DateTime @default(now())
  updatedAt   DateTime @updatedAt
  rsvps       rsvp[]
}

model rsvp {
  id        String   @id @default(cuid()) @map("_id")
  firstName String
  lastName  String
  phone     String
  email     String
  attendees Int
  eventId   String
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
  event     Event    @relation(fields: [eventId], references: [id])
}

//news model
model news {
  id        String   @id @default(cuid()) @map("_id")
  title     String
  date      DateTime
  content   String
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
}

//videos model
model videos {
  id        String   @id @default(cuid()) @map("_id")
  title     String
  date      DateTime
  link      String
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
}
